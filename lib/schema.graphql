"Valida los tipos de nivel"
enum Level {
    principiante
    intermedio
    avanzado
}

union GlobalSearch = Course | Student | Monitor

type Course {
    _id: ID!,
    title: String!,
    teacher: String,
    description: String!,
    topic: String @deprecated ,
    people: [Student],
    level: Level
}

interface Person {
    _id: ID!,
    name: String!,
    email: String!    
}

type Student implements Person{
    _id: ID!,
    name: String!,
    email: String!,
    avatar: String
}

type Monitor implements Person{
    _id: ID!,
    name: String!,
    email: String!
    phone: String
}


type Query {
    "Obtener todos los cursos"
    getCourses: [Course],
    getCourse(id:ID!):Course
    getPeople: [Person],
    getPerson(id:ID!): Person

    "Busqueda global"
    searchItems(keyword: String) : [GlobalSearch]
}

input CourseInput {
    title: String!,
    teacher: String,
    description: String!,
    topic: String,
    level: Level
}
input CourseEditInput {
    title: String,
    teacher: String,
    description: String,
    topic: String
}

input PersonInput{
    name: String!,
    email: String!,
    phone: String,
    avatar: String
}

input PersonEditInput{
    name: String!,
    email: String!
    phone: String,
    avatar: String
}

type Mutation {
    "Crear un curso"
    createCourse(input: CourseInput!): Course
    editCourse(_id:ID! , input: CourseEditInput): Course
    createPerson(input: PersonInput!): Person
    editPerson(_id:ID! , input: PersonEditInput):Person
    deleteStudent(_id:ID!) : String
    "Agrega una persona a un curso"
    addPeople(courseID: ID!, personID: ID!): Course
}